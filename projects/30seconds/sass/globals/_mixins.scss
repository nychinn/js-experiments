
@mixin boxSizing {
	-webkit-box-sizing: border-box; 
	-moz-box-sizing: border-box; 
	box-sizing: border-box; 
}

@mixin boxShadow($params...) {
	-webkit-box-shadow: $params;
    -moz-box-shadow: $params;
    box-shadow: $params;
}

@mixin textShadow($params...) {
	-webkit-text-shadow: $params;
    -moz-text-shadow: $params;
    text-shadow: $params;
}


@function makeLongShadow($color, $times: 1) {
	$val: 0px 0px $color;
	
	@for $i from 1 through $times {
		$val: #{$val}, #{$i}px #{$i}px 0px #{$color};
	}

	@return $val;
}

@function makeLongOffsetShadow($color, $times: 1) {
	$val: 0px 0px $color;
	
	@for $i from 1 through $times {
		$val: #{$val}, 
			  (#{$i - 1}px #{$i + 1}px 0px #{$color}),
			  (#{$i - 1}px #{$i - 0}px 0px #{$color}),
			  (#{$i - 1}px #{$i - 1}px 0px #{$color}),
			  (#{$i + 1}px #{$i + 1}px 0px #{$color}),
			  (#{$i + 1}px #{$i + 0}px 0px #{$color}),
			  (#{$i + 1}px #{$i + 1}px 0px #{$color})
			  ;
	}
	@return $val;
}

//-- mixin to create seamless shadow ^o^)/
@mixin seamlessTextShadow($color, $outline: false, $times: 1) {
	
	@if $outline == false {
		text-shadow: makeLongShadow($color, $times);
	} @else {
		text-shadow: 
			-1px -1px 0px $color,
		    -1px 0px 0px $color,
		    -1px 1px 0px $color,
		    1px 1px 0px $color,
		    1px -1px 0px $color,
		    -1px 1px 0px $color,
		    makeLongShadow($color, $times),
		    makeLongOffsetShadow($color, $times);
	}
}


// -- text with 1px outline
@mixin textOutline($color: #000) {	
	@include textShadow(
		-1px -1px 0px $color,
	    -1px 0px 0px $color,
	    -1px 1px 0px $color,
	    1px 1px 0px $color,
	    1px -1px 0px $color
	);
}







// -- E X P E R I M E N T A T I O N -- //


// -- create mixin to control thickness of text outline first!!
@function createOutline($color: #000, $weight: 1) {

	@if $weight > 1 {
		@for $i from 1 through $weight {
			
		}
	}
}





@mixin textOutline($color: #000, $weight: 1) {	
	@include textShadow(
		-1px -1px 0px $color,
	    -1px 0px 0px $color,
	    -1px 1px 0px $color,
	    1px 1px 0px $color,
	    1px -1px 0px $color
	);
}





// -- try to create mixin to adjust both thickness and shadow weight
// -- atm it fails
@function testing($color, $thickness: 1, $times: 1) {
	$val: 0px 0px $color;
	
	@for $i from 1 through $times {
		$val: #{$val}, 
			  (#{$i - $thickness}px #{$i + $thickness}px 0px #{$color}),
			  (#{$i - $thickness}px #{$i - 0}px 0px #{$color}),
			  (#{$i - $thickness}px #{$i - $thickness}px 0px #{$color}),
			  (#{$i + $thickness}px #{$i + $thickness}px 0px #{$color}),
			  (#{$i + $thickness}px #{$i + 0}px 0px #{$color}),
			  (#{$i + $thickness}px #{$i + $thickness}px 0px #{$color})
			  ;
	}
	@return $val;
}

@mixin text($color, $outline: false, $thickness: 1, $times: 1) {
	@if ( $outline == false ) {
		text-shadow: makeLongShadow($color, $times);
	} @else {
		text-shadow: 
			(-#{$thickness}px -#{$thickness}px 0px $color),
		    (-#{$thickness}px 0px 0px $color),
		    (-#{$thickness}px #{$thickness}px 0px $color),
		    (#{$thickness}px #{$thickness}px 0px $color),
		    (#{$thickness}px -#{$thickness}px 0px $color),
		    (-#{$thickness}px #{$thickness}px 0px $color),
		    makeLongShadow($color, $times),
		    testing($color, $thickness, $times);
	}
}







// -- https://gist.github.com/nathggns/2984123
// -- still kinda messy!!
@mixin stroke($width, $color) {
  $shadow: ();
  @for $i from -$width through $width {
    $shadow: append($shadow,#{$width}px #{$i}px $color, comma);
    $shadow: append($shadow,#{-$width}px #{$i}px $color, comma);
    $shadow: append($shadow,#{$i}px #{$width}px $color, comma);
    $shadow: append($shadow,#{$i}px #{-$width}px $color, comma);
  }
  text-shadow: $shadow;
}

